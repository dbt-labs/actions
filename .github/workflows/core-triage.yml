# **what?**
# Automates adding issues and PRs from Core repositories
# to the "Core triage" project in GitHub.
#
# Inputs:
#   GH_TOKEN: GitHub authorization token with sufficient scope
#      - needed (I think): org:read, org:write, project:read, project:write

# **why?**
# Unfortunately, GitHub projects don't support this easily.
# We could add a workflow in each new project, or just run
# this on a schedule.

# **when?**
# Every ~hour, on PR, or manually.

name: core-triage

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/core-triage.yml
      - scripts/core-triage/**

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}
  cancel-in-progress: true

jobs:
  add-items-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: "check out repo"
        uses: actions/checkout@v4

      - name: "setup python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: "pip installs"
        run: pip install -r requirements.txt
        working-directory: scripts/core-triage

      - name: "run script"
        id: run-script
        run: python project.py
        working-directory: scripts/core-triage
        env:
          GH_TOKEN: ${{ secrets.VARIABLE_CORE_TRIAGE_ONLY }}

      - name: "Post failure to core Slack channel"
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && steps.run-script.outcome != 'success' }}
        with:
          status: ${{ job.status }}
          notification_title: 'core-triage action failed'
          message_format: ':x: Core Triage Project Automation ${{ steps.run-script.outcome }}.  Needs attention but not an incident.'
          footer: 'Linked failed run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEV_CORE_ALERTS }}

