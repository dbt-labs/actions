name: "Build changelog"
run-name: "Merge changelogs into `.changes/${{ inputs.version }}.md`"

on:
    workflow_call:
        inputs:
            branch:
                description: "The branch where the changelogs should be merged"
                type: string
                default: "main"
            version:
                description: "The version whose changelogs should be merged"
                type: string
                required: true
        outputs:
            changelog-path:
                value: ${{ jobs.changelog-inputs.outputs.changelog-path }}
                description: "The path to the changelog for this version"
                type: string
            created:
                value: ${{ !jobs.changelog-inputs.outputs.changelog-exists }}
                description: "Identifies if this workflows created the changelog"
                type: boolean

permissions:
    contents: write

concurrency:
    group: "${{ github.workflow }}-${{ inputs.branch }}-${{ inputs.version }}"
    cancel-in-progress: true

env:
    NOTIFICATION_PREFIX: "Build changelog"

jobs:
    changelog-inputs:
        name: "Inputs"
        runs-on: ubuntu-latest
        outputs:
            changelog-path: ${{ steps.audit-changelog.outputs.path }}
            changelog-exists: ${{ steps.audit-changelog.outputs.exists }}
        steps:
        -   name: "Check out `${{ inputs.branch }}`"
            uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}

        -   name: "Setup environment"
            uses: ./setup-environment

        -   name: "Audit changelog"
            id: audit-changelog
            uses: ./audit-changelog
            with:
                version: ${{ inputs.version }}

        -   name: "[DEBUG] Inputs"
            shell: bash
            run: |
                echo branch              : ${{ inputs.branch }}
                echo version             : ${{ inputs.version }}
                echo changelog-path      : ${{ steps.audit-changelog.outputs.path }}
                echo changelog-exists    : ${{ steps.audit-changelog.outputs.exists }}

    generate-changelog:
        name: "Generate changelog"
        needs: changelog-inputs
        if: ${{ !needs.calculated-inputs.outputs.changelog-exists }}
        runs-on: ubuntu-latest
        steps:
        -   name: "Check out `${{ inputs.branch }}`"
            uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}

        -   name: "Setup environment"
            uses: ./setup-environment

        -   name: "Parse `${{ inputs.version }}`"
            id: semver
            uses: ./parse-semver
            with:
                version: ${{ inputs.version }}

        -   name: "Get Core team membership"
            id: core-membership
            uses: ./audit-github-team
            with:
                team: "core-group"

        -   name: "Set Core team membership for `changie` contributors exclusion"
            shell: bash
            run: echo "CHANGIE_CORE_TEAM=$CORE_TEAM_MEMBERS" >> $GITHUB_ENV
            env:
                CORE_TEAM_MEMBERS = ${{ steps.core-membership.outputs.members }}

        -   name: "Generate changelog"
            shell: bash
            run: |
                # this is a pre-release
                if [[ $IS_PRE_RELEASE -eq 1 ]]; then
                    changie batch $BASE_VERSION --move-dir '$BASE_VERSION' --prerelease $PRE_RELEASE
      
                # this is a final release with associated pre-releases
                elif [[ -d ".changes/$BASE_VERSION" ]]; then
                    changie batch $BASE_VERSION --include '$BASE_VERSION' --remove-prereleases
      
                # this is a final release with no associated pre-releases
                else
                    changie batch $BASE_VERSION
                fi
      
                changie merge
            env:
                BASE_VERSION: ${{ steps.semver.outputs.base_version }}
                PRE_RELEASE: ${{ steps.semver.outputs.prerelease }}
                IS_PRE_RELEASE: ${{ steps.semver.outputs.is_prerelease }}

        -   name: "Remove trailing whitespace and extra newlines"
            continue-on-error: true
            shell: bash
            run: pre-commit run --all-files

        -   name: "Commit and push changes"
            uses: ./github-commit
            with:
                message: "generate changelog for ${{ inputs.version }}"

        -   name: "[INFO] Generate changelog"
            shell: bash
            run: echo "::notice title=$TITLE::$MESSAGE"
            env:
                TITLE: "[${{ env.NOTIFICATION_PREFIX }}]: Generate changelog"
                MESSAGE: "Generated changelog for `${{ inputs.version }}`: `${{ needs.changelog-inputs.outputs.changelog-path }}`"

    skip-changelog:
        name: "Skip changelog generation"
        needs: changelog-inputs
        if: ${{ needs.changelog-inputs.outputs.changelog-exists }}
        runs-on: ubuntu-latest
        steps:
        -   name: "[INFO] Generate changelog - SKIPPED"
            shell: bash
            run: echo "::notice title=$TITLE::$MESSAGE"
            env:
                TITLE: "[${{ env.NOTIFICATION_PREFIX }}]: Generate changelog - SKIPPED"
                MESSAGE: "The changelog already exists for version ${{ inputs.version }}: ${{ needs.calculated-inputs.outputs.changelog-path }}"
