# **what?**
#
# Inputs:
#   
# **why?**
#
# **when?**
#

name: Build

on:
  workflow_call:
    inputs:
      sha:
        required: true
        type: string
      version_number:
        required: true
        type: string
      build_script_path:
        required: true
        default: scripts/build-dist.sh
        type: string
      package_test_command:
        required: true
        default: dbt --version
        type: string

permissions:
  contents: write

env:
  changelog_path: ".changes/${{ github.event.inputs.version_number }}.md"
  s3_bucket: "s3://core-team-artifacts/${{ github.repository }}/${{ github.event.inputs.version_number }}"
  artifact_retention_days: 2

jobs:
  log-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Print variables
        run: |
            echo The last commit sha in the release: ${{ github.event.inputs.sha }}
            echo The release version number: ${{ github.event.inputs.version_number }}
            echo The build_script_path: ${{ github.event.inputs.build_script_path }}
            echo The package_test_command: ${{ github.event.inputs.package_test_command }}

  check-build-exists:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.set_existence.outputs.exists }}
  
    steps:
      - name: Placeholder
        run: echo Workflow is not built

      - name: Copy Artifacts from S3
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: ${{ env.s3_bucket }}
          destination: .
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws_region: us-east-1
          flags: --recursive  # since it's an entire directory
      
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          # TODO: is this a good check?  first pass.
          files: "${{ env.changelog_path }}, dist/*.tar.gz, dist/*.whl"

      # upload the files downloaded from S3 to artifacts so we don't have to keep 
      # downloading from S3
      - name: upload artifacts
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.version_number }}
          path: |
            dist/
            ${{ env.changelog_path }}
          if-no-files-found: error
          retention-days: ${{ env.artifact_retention_days }}

      - name: Set Exisistence for Other Jobs
        id: set_existence
        run: echo '::set-output name=exists::${{steps.check_files.outputs.files_exists}}'


  skip-build:
    runs-on: ubuntu-latest
    needs: [check-build-exists]
    if: needs.check-build-exists.outputs.exists == 'true'

    steps:
      - name: Build Exists, Skip To Test
        run: |
          echo A build already exists for version ${{github.event.inputs.version_number}}, skipping build job

  build-packages:
    runs-on: ubuntu-latest
    needs: [check-build-exists]
    if: needs.check-build-exists.outputs.exists == 'false'

    outputs:
      finished: ${{ steps.set_success.outputs.finished }}

    steps:

      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          # persist-credentials: false  # TODO: with this false I get an error checking it out, it's what existed in previous release version though
          ref: ${{ github.event.inputs.sha }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip install --upgrade setuptools wheel twine check-wheel-contents
          pip --version

      - name: Build distributions
        run: ./${{ inputs.build_script_path }}

      - name: Show distributions
        run: ls -lh dist/

      - name: Check distribution descriptions
        run: |
          twine check dist/*

      - name: Check wheel contents
        run: |
          check-wheel-contents dist/*.whl --ignore W007,W008

      # We want the artifacts available for release/pypi steps
      # so we don't havew to reach back out top S3
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.version_number }}
          path: |
            dist/
            !dist/dbt-${{ inputs.version_number }}.tar.gz
            ${{ env.changelog_path }}
          if-no-files-found: error
          retention-days: ${{ env.artifact_retention_days }}

      # Put all artifacts into S3 in case something goes wrong along the way we can get them
      - name: Upload Build Artifacts to S3
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: dist/
          destination: ${{ env.s3_bucket }}/dist
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          flags: --recursive  # needed because we're uploading a directory

      - name: Upload Changelog to S3 to Release Notes
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: ${{ env.changelog_path }}
          destination: ${{ env.s3_bucket }}/${{ env.changelog_path }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
      
      - name: If we made it here we need to test what we built
        id: set_success
        run: echo '::set-output name=finished::true'
      
  test-build:
    runs-on: ubuntu-latest
    needs: [check-build-exists, build-packages]
    if: ${{ needs.check-build-exists.outputs.exists }} == false || ${{ needs.build-packages.outputs.finished }} == true
  
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip install --upgrade wheel
          pip --version

      - uses: actions/download-artifact@v2   # TODO: from S3?
        with:
          name: ${{ github.event.inputs.version_number }}
          path: dist/

      - name: Display structure of all downloaded files
        run: ls -R
      
      - name: Show distributions
        run: ls -lh dist/

      - name: Install wheel distributions
        run: |
          find ./dist/*.whl -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check wheel distributions
        run: |
          ${{ github.event.inputs.package_test_command }}

      - name: Install source distributions
        run: |
          find ./dist/*.gz -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check source distributions
        run: |
          ${{ github.event.inputs.package_test_command }}
