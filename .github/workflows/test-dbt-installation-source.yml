# **what?**
# This workflow installs the latest version of dbt adapter from sources.
# It then runs 'dbt --version' to verify the installation was successful.
# If it fails for the scheduled runs, it will post to our team alerts channel.

# **why?**
# This is a simple way to test all adapter installations at a single
# time. It allows us to test them on a schedule as well to check for
# any breaking dependency changes that might happen and alert us on it.

# **when?**
# This reusable workflow can be called or started manually
# by specifying the package name

name: dbt Installation - Source Integration Tests

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: "Package name to test (i.e. dbt-core)"
        required: true
        type: string
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        description: Slack app webhook url
        required: true

permissions:
  contents: read # required for slack-post-notification workflow

jobs:
  source-integration-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        branch: ["1.1.latest", "1.2.latest", "1.3.latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: "Resolve Repository"
        id: repo-info
        run: |
          name="dbt-labs/${{ inputs.package_name }}"
          echo "name=$name" >> $GITHUB_OUTPUT

      - name: "Checkout ${{ steps.repo-info.outputs.name }} Branch ${{ matrix.branch }}"
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.repo-info.outputs.name }}
          persist-credentials: false
          ref: ${{ matrix.branch }}

      - name: "[DEBUG] Show Work Folder Content"
        run: |
          ls -lh

      - name: "Set up Python - ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Update Python Packages"
        run: |
          python -m pip install --user --upgrade pip

      - name: "[DEBUG] Show Package Installer Python Version"
        run: |
          python -m pip --version

      - name: "Install Packages From PyPI For ${{ inputs.package_name }}"
        run: |
          if [[ ${{ inputs.package_name }} == "dbt-core" ]]
          then
            python -m pip install -r requirements.txt
          else
            python -m pip install .
          fi

      - name: "Verify ${{ inputs.package_name }} Version"
        run: |
          dbt --version

  slack-notification:
    name: "Post Scheduled Run Failures"
    needs: source-integration-test
    if: ${{ failure() && github.event_name == 'schedule' }}

    uses: dbt-labs/dbt-release/.github/workflows/slack-post-notification.yml@main
    with:
      status: "failure"
      notification_title: "Source nightly integration test failed for - ${{ inputs.package_name }}"

    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
