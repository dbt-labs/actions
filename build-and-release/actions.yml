name: "Build and Release"
description: "Build  and Release"

on:
  workflow_call:
    inputs:
      sha:
        description: 'The last commit sha in the release'
        required: true
      version_number:
        description: 'The release version number (ie. 1.0.0b1)'
        required: true
      build_script_path:
        description: 'The path to the build script(default: ./scripts/build-dist.sh))'
        default: './scripts/build-dist.sh'
        required: true
      is_prod:
        # TODO: need an action to clean up test builds for testing purposes
        description: 'Is this a production build/release'
        default: 'false'
    # outputs:
    #   name:
        # description: "Package name"

# TODO: validate
permissions:
  issues: write

jobs:
  log-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        id: set
        run: |
            echo The last commit sha in the release: ${{ inputs.sha }}
            echo The release version number: ${{ inputs.version_number }}
            echo The path to the build script: ${{ inputs.build_script_path }}
            echo This a production build/release: ${{ inputs.is_prod }}

  check_build_exists:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check_existence.outputs.exists }}
  
    steps:
      - name: Placeholder
        run: echo Workflow is not built
      - name: check_existence
        id: check_existence
        run: echo "::set-output name=exists::'true'"

  build:
    needs: [check_build_exists]
    if: needs.check_build_exists.outputs.exists == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          ref: ${{ github.event.inputs.sha }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # TODO: why is everything below here not just a script?
      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip install --upgrade setuptools wheel twine check-wheel-contents
          pip --version

      - name: Build distributions
        run: ${{ inputs.build_script_path }}

      - name: Show distributions
        run: ls -lh dist/

      - name: Check distribution descriptions
        run: |
          twine check dist/*

      - name: Check wheel contents
        run: |
          check-wheel-contents dist/*.whl --ignore W007,W008

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/
            !dist/dbt-${{ inputs.version_number }}.tar.gz

  test_build:
    needs: [build]
    runs-on: ubuntu-latest
  
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip install --upgrade wheel
          pip --version

      - uses: actions/download-artifact@v2   # TODO: from S3?
        with:
          name: dist
          path: dist/

      # TODO: why is everything below here not just a script?
      - name: Show distributions
        run: ls -lh dist/

      - name: Install wheel distributions
        run: |
          find ./dist/*.whl -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check wheel distributions
        run: |
          dbt --version

      - name: Install source distributions
        run: |
          find ./dist/*.gz -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check source distributions
        run: |
          dbt --version

  check_release_exists:
    needs: [test_build]  # TODO: will this still trigger if build is skipped because the build is already there?
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check_existence.outputs.exists }}
  
    steps:
      - name: Placeholder
        run: echo Workflow is not built
      - name: check_existence
        id: check_existence
        run: echo "::set-output name=exists::'true'"

  github_release:
    needs: [check_release_exists]
    if: needs.check_release_exists.outputs.exists == 'false'
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: '.'

      # Need to set an output variable because env variables can't be taken as input
      # This is needed for the next step with releasing to GitHub
      - name: Find release type
        id: release_type
        env:
          IS_PRERELEASE: ${{ contains(github.event.inputs.version_number, 'rc') ||  contains(github.event.inputs.version_number, 'b') }}
        run: |
          echo ::set-output name=isPrerelease::$IS_PRERELEASE

      - name: Creating GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: dbt-core v${{github.event.inputs.version_number}}
          tag_name: v${{github.event.inputs.version_number}}
          prerelease: ${{ steps.release_type.outputs.isPrerelease }}
          target_commitish: ${{github.event.inputs.sha}}
          body: |
            [Release notes](https://github.com/dbt-labs/dbt-core/blob/main/CHANGELOG.md)
          files: |
            dbt_postgres-${{github.event.inputs.version_number}}-py3-none-any.whl
            dbt_core-${{github.event.inputs.version_number}}-py3-none-any.whl
            dbt-postgres-${{github.event.inputs.version_number}}.tar.gz
            dbt-core-${{github.event.inputs.version_number}}.tar.gz

  check_pypi_exists:
    needs: [github_release]  # TODO: will this still trigger if github_release is skipped because the release is already there?
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check_existence.outputs.exists }}
  
    steps:
      - name: Placeholder
        run: echo Workflow is not built
      - name: check_existence
        id: check_existence
        run: echo "::set-output name=exists::'true'"

  pypi:
    needs: [check_pypi_exists]
    if: needs.check_pypi_exists.outputs.exists == 'false'
    runs-on: ubuntu-latest
  
    environment: PypiProd  # TODO: what's this? Could make be input for testing purposes?
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: 'dist'

      - name: Publish distribution to PyPI
        if: ${{ inputs.is_prod }} == 'true'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish distribution to PyPI
        if: ${{ inputs.is_prod }} == 'false'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/