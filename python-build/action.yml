name: "Build"
description: "Build"
inputs:
  sha:
    description: 'The last commit sha in the release'
    required: true
  version_number:
    description: 'The release version number (i.e. 1.0.0b1)'
    required: true
# outputs:
#   name:
    # description: "Package name"

runs:
  using: "composite"

  steps:
    - name: Check out the repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        ref: ${{ github.event.inputs.sha }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install python dependencies
      run: |
        pip install --user --upgrade pip
        pip install --upgrade setuptools wheel twine check-wheel-contents
        pip --version

    - name: Build distributions
      run: ./scripts/build-dist.sh

    - name: Show distributions
      run: ls -lh dist/

    - name: Check distribution descriptions
      run: |
        twine check dist/*

    - name: Check wheel contents
      run: |
        check-wheel-contents dist/*.whl --ignore W007,W008

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: |
          dist/
          !dist/dbt-${{github.event.inputs.version_number}}.tar.gz

  test-build:
    name: verify packages

    needs: [build, unit]

    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip install --upgrade wheel
          pip --version

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Show distributions
        run: ls -lh dist/

      - name: Install wheel distributions
        run: |
          find ./dist/*.whl -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check wheel distributions
        run: |
          dbt --version

      - name: Install source distributions
        run: |
          find ./dist/*.gz -maxdepth 1 -type f | xargs pip install --force-reinstall --find-links=dist/

      - name: Check source distributions
        run: |
          dbt --version
