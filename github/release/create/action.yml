name: "Create GitHub release"
description: "Publish release artifacts from an archive to GitHub"

inputs:
    tag:
        description: "The release tag to publish under"
        required: true
    sha:
        description: "Commit SHA being released"
        required: true
    archive-name:
        description: "Name of the archive containing the artifacts, leave blank if local"
        default: ""
    changelog-path:
        description: "Path to the release notes from the repo root"
        required: true
    is-draft:
        description: "Indicates that this is a draft release"
        required: true

runs:
    using: composite
    steps:
    -   name: "[DEBUG] Inputs"
        shell: bash
        run: |
            echo "==========INPUTS=========="
            echo tag            : ${{ inputs.tag }}
            echo sha            : ${{ inputs.sha }}
            echo archive-name   : ${{ inputs.archive-name }}
            echo changelog-path : ${{ inputs.changelog-path }}
            echo is-draft       : ${{ inputs.is-draft }}

    -   name: "Set: prerelease"
        id: prerelease
        shell: bash
        run: |
            if $IS_PRE_RELEASE; then
                echo "flag=--prerelease" >> $GITHUB_OUTPUT
            fi
        env:
            IS_PRE_RELEASE: ${{ contains(inputs.tag, 'rc') || contains(inputs.tag, 'b') || contains(inputs.tag, 'a') || contains(inputs.tag, 'dev') }}

    -   name: "Set: draft"
        id: draft
        shell: bash
        run: |
            if $IS_DRAFT; then
                echo "flag=--draft" >> $GITHUB_OUTPUT
            fi
        env:
            IS_DRAFT: ${{ fromJSON(inputs.is-draft) }}

    -   name: "Download release artifacts from `${{ inputs.archive-name }}`"
        if: ${{ !(inputs.archive-name == '') }}
        uses: actions/download-artifact@v4
        with:
            name: ${{ inputs.archive-name }}
            path: dist/

    -   name: "[DEBUG] Release artifacts"
        shell: bash
        run: echo $(ls ./dist)

    -   name: "Publish artifacts to GitHub"
        shell: bash
        run: gh release create $TAG $FILES $DRAFT --notes-file $NOTES_FILE $PRERELEASE --target $TARGET --title "$TITLE" --repo $REPO
        env:
            TAG: ${{ inputs.tag }}
            FILES: "./dist/*"
            DRAFT: ${{ steps.draft.output.flag }}
            NOTES_FILE: ${{ inputs.changelog-path }}
            PRERELEASE: ${{ steps.prerlease.output.flag }}
            TARGET: ${{ inputs.sha }}
            TITLE: "${{ github.repository }} ${{ inputs.tag }}"
            REPO: "https://github.com/dbt-labs/${{ github.repository }}"
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    -   name: "[DEBUG] Outputs"
        shell: bash
        run: |
            echo "==========OUTPUTS=========="
            echo "N/A"

    -   name: "[INFO] Create GitHub release"
        shell: bash
        run: echo "::notice title=$TITLE::$MESSAGE"
        env:
            TITLE: "[${{ env.NOTIFICATION_PREFIX }}]: Create GitHub release"
            MESSAGE: "tag: `${{ inputs.tag }}` artifacts: `$(ls ./dist)`"
