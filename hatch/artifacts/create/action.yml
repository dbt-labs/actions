name: "Create hatch artifacts"
description: "Build release artifacts using `hatch` as the default build frontend"

inputs:
    archive-name:
        description: "Name for the GitHub archive for uploading built artifacts, leave blank for no upload"
        default: ""
    archive-retention:
        description: "Duration in days to keep the GitHub archive, requires `archive-name`"
        default: "3"
    working-directory:
        description: "Where to run commands from, primarily supports monorepo setups (e.g. <sub-package-dir>/"
        default: "./"

runs:
    using: composite
    steps:
    -   name: "[DEBUG] Inputs"
        shell: bash
        run: |
            echo "==========INPUTS=========="
            echo archive-name      : ${{ inputs.archive-name }}
            echo archive-retention : ${{ inputs.archive-retention }}
            echo working-directory : ${{ inputs.working-directory }}

    -   name: "Build artifacts"
        shell: bash
        run: |
            hatch build
            hatch run build:check-all
        working-directory: ${{ inputs.working-directory }}

    -   name: "[INFO] Built artifacts"
        shell: bash
        run: echo "::notice title=$TITLE::$MESSAGE"
        env:
            TITLE: "[${{ env.NOTIFICATION_PREFIX }}]: Built artifacts"
            MESSAGE: $(ls ./dist)
        working-directory: ${{ inputs.working-directory }}

    -   name: "Upload artifacts"
        if: ${{ !(inputs.archive-name == '') }}
        uses: actions/upload-artifact@v4
        with:
            name: ${{ inputs.archive-name }}
            path: ${{ inputs.working-directory }}dist/
            retention-days: ${{ fromJSON(inputs.archive-retention) }}

    -   name: "[INFO] Uploaded artifacts"
        if: ${{ !(inputs.archive-name == '') }}
        shell: bash
        run: echo "::notice title=$TITLE::$MESSAGE"
        env:
            TITLE: "[${{ env.NOTIFICATION_PREFIX }}]: Uploaded artifacts"
            MESSAGE: "Uploaded artifacts to ${{ inputs.archive-name }}"

    -   name: "[DEBUG] Outputs"
        shell: bash
        run: |
            echo "==========OUTPUTS=========="
            echo "N/A"
